	jmp main

# t
# b
# a
# --
# a + (b - a) * t
lerpf:
	dup 3
	dup 3
	dup 1

	subf
	dup 3
	mulf
	addf

	# Clean up the stack
	swap 2
	pop
	swap 2
	pop
	swap 2
	pop

	ret

main:
	push 69.0	# a: [69.0]
	push 420.0	# b: [69.9, 420.0]
	push 0.0	# t: [69.0, 420.0, 0.0]
	push 1.0	# 1: [69.0, 420.0, 0.0, 1.0]
	push 10.0	# n: [69.0, 420.0, 0.0, 1.0, 10.0]
	divf		# [69.0, 420.0, 0.0, 0.1]

loop:			# [69.0, 420.0, 0.0, 0.1]
	dup 3		# [69.0, 420.0, 0.0, 0.1, 69.0]
	dup 3		# [69.0, 420.0, 0.0, 0.1, 69.0, 420.0]
	dup 3		# [69.0, 420.0, 0.0, 0.1, 69.0, 420.0, 0.0]
	call lerpf	# [69.0, 420.0, 0.0, 0.1, $RES]
	native 2	# [69.0, 420.0, 0.0, 0.1]

	swap 1		# [69.0, 420.0, 0.1, 0.0]
	dup 1		# [69.0, 420.0, 0.1, 0.0, 0.1]
	addf		# [69.0, 420.0, 0.1, 0.1]
	swap 1		# [69.0, 420.0, 0.1, 0.1]

	dup 1		# [69.0, 420.0, 0.1, 0.1, 0.1]
	push 1.0	# [69.0, 420.0, 0.1, 0.1, 0.1, 1.0]
	gef		# [69.0, 420.0, 0.1, 0.1, 1]

	jif loop	# [69.0, 420.0, 0.1, 0.1]
	halt
